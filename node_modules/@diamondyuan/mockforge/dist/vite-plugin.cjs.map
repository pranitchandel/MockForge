{
  "version": 3,
  "sources": ["../node_modules/.pnpm/object-assign@4.1.1/node_modules/object-assign/index.js", "../node_modules/.pnpm/vary@1.1.2/node_modules/vary/index.js", "../node_modules/.pnpm/cors@2.8.5/node_modules/cors/lib/index.js", "../src/vite-plugin/main.ts", "../src/server/node/server.ts", "../node_modules/.pnpm/get-port@7.1.0/node_modules/get-port/index.js", "../src/sdk/node/sdk.ts", "../node_modules/.pnpm/filename-reserved-regex@3.0.0/node_modules/filename-reserved-regex/index.js", "../node_modules/.pnpm/valid-filename@4.0.0/node_modules/valid-filename/index.js", "../src/sdk/common/filename.ts", "../src/server/node/service.ts", "../node_modules/.pnpm/query-string@9.1.0/node_modules/query-string/base.js", "../node_modules/.pnpm/decode-uri-component@0.4.1/node_modules/decode-uri-component/index.js", "../node_modules/.pnpm/filter-obj@5.1.0/node_modules/filter-obj/index.js", "../node_modules/.pnpm/split-on-first@3.0.0/node_modules/split-on-first/index.js", "../node_modules/.pnpm/query-string@9.1.0/node_modules/query-string/index.js"],
  "sourcesContent": ["/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n", "(function () {\n\n  'use strict';\n\n  var assign = require('object-assign');\n  var vary = require('vary');\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureMethods(options, req));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  module.exports = middlewareWrapper;\n\n}());\n", "import { join } from \"path\";\nimport { createMockForgeServer } from \"../server/node/server\";\n\ninterface MockForgeOption {\n  mockDataDir?: string;\n  port?: number;\n}\n\nconst getDirname = () => {\n  if (typeof __dirname !== \"undefined\") {\n    return __dirname;\n  } else if (typeof import.meta !== \"undefined\" && import.meta.url) {\n    return new URL(\".\", import.meta.url).pathname;\n  }\n  return process.cwd();\n};\n\nexport function mockForge(options: MockForgeOption) {\n  const { mockDataDir } = options || {};\n  const finalBaseDir = mockDataDir || join(process.cwd(), \".mockforge\");\n  let isMockEnabled = false;\n\n  let port: number | null = null;\n  return {\n    name: \"vite-plugin-mock-forge\",\n    configResolved(config: any) {\n      if (process.env.MOCK_FORGE && config.command === \"serve\") {\n        isMockEnabled = true;\n      }\n    },\n    async configureServer() {\n      port = await createMockForgeServer({\n        baseDir: finalBaseDir,\n        static: [join(getDirname(), \"ui\"), join(getDirname(), \"inject\")],\n      });\n      console.log(\"[MockForge] start at http://localhost:\" + port);\n    },\n\n    transformIndexHtml(html: string) {\n      if (isMockEnabled && port !== null) {\n        const randomId = Math.random().toString(36).substring(2, 15);\n        const serverURL = `http://localhost:${port}`;\n        const scriptUrl = `http://localhost:${port}/inject.js`;\n        const injection = `\n            <script src=\"${scriptUrl}\" id=\"mock-forge-request-simulator\" clientId=\"${randomId}\" serverURL=\"${serverURL}\">\n            </script>\n          `;\n        return html.replace(\"</head>\", `${injection}</head>`);\n      }\n      return html;\n    },\n  };\n}\n", "import express, { Request, Response } from \"express\";\nimport getPort from \"get-port\";\nimport { createServer } from \"node:http\";\nimport { WebSocketServer, WebSocket } from \"ws\";\nimport { RPCRequestBody, RPCResponse } from \"./../common/rpc.js\";\nimport { MockForgeStateService } from \"./service.js\";\nimport { MockForgeEvent } from \"../common/event.js\";\nimport querystring from \"query-string\";\nimport cors from \"cors\";\n\nexport interface CreateMockForgeServerOption {\n  baseDir: string;\n  port?: number;\n  static?: string[];\n}\n\ninterface Client {\n  id: string;\n  ws: WebSocket;\n}\n\nexport async function createMockForgeServer(\n  option: CreateMockForgeServerOption\n): Promise<number> {\n  const serverPort = await getPort({ port: option.port || 50930 });\n  return new Promise((resolve, reject) => {\n    const app = express();\n    const server = createServer(app);\n    const wss = new WebSocketServer({ server });\n    app.use(express.json());\n    app.use(cors());\n    const mockForgeStateService = new MockForgeStateService(option.baseDir);\n    const clients: Client[] = [];\n    // \u6DFB\u52A0\u4E00\u4E2A\u65B9\u6CD5\u6765\u53D1\u9001\u4E8B\u4EF6\u7ED9\u6240\u6709\u5BA2\u6237\u7AEF\n    function broadcastEvent(event: MockForgeEvent) {\n      clients.forEach((client) => {\n        client.ws.send(JSON.stringify(event));\n      });\n    }\n    if (option.static) {\n      option.static.forEach((e) => {\n        app.use(express.static(e));\n      });\n    }\n    app.post(\"/api/v1/mockforge/rpc\", async (req: Request, res: Response) => {\n      const requestBody = req.body as RPCRequestBody;\n      const { method, args, clientId } = requestBody;\n\n      let response: RPCResponse;\n\n      try {\n        const serviceMethod = mockForgeStateService[\n          method as keyof MockForgeStateService\n        ] as Function;\n        if (typeof serviceMethod !== \"function\") {\n          throw new Error(`Unknown method: ${method}`);\n        }\n        const result = await serviceMethod.apply(mockForgeStateService, args);\n        response = {\n          success: true,\n          data: result,\n          clientId,\n        };\n      } catch (error) {\n        response = {\n          success: false,\n          errorMessage: error instanceof Error ? error.message : String(error),\n          stack: error instanceof Error ? error.stack : \"\",\n          clientId,\n        };\n      }\n\n      try {\n        switch (method as keyof MockForgeStateService) {\n          case \"addMockAPI\":\n          case \"deleteHttpMockAPI\":\n          case \"deleteHttpMockResponse\":\n          case \"updateHttpMockAPI\":\n          case \"addHttpMockResponse\": {\n            broadcastEvent({\n              type: \"http-mock-api-change\",\n              clientId,\n            });\n            break;\n          }\n          case \"toggleHttpApiResponse\": {\n            broadcastEvent({\n              type: \"mock-forge-state-change\",\n              clientId,\n            });\n            break;\n          }\n        }\n      } catch (error) {}\n\n      res.json(response);\n    });\n\n    wss.on(\"connection\", (ws: WebSocket, req: Request) => {\n      const parseResult = querystring.parseUrl(req.url);\n      const url = parseResult.url;\n      const clientId = String(parseResult.query.clientId);\n      if (clientId && url === \"/api/v1/mockforge/connect\") {\n        const client: Client = { id: clientId, ws };\n        clients.push(client);\n        ws.on(\"close\", () => {\n          const index = clients.findIndex((c) => c.id === clientId);\n          if (index !== -1) {\n            clients.splice(index, 1);\n          }\n        });\n      } else {\n        ws.close();\n      }\n    });\n    server.listen(serverPort, () => {\n      const address = server.address();\n      if (address && typeof address === \"object\") {\n        resolve(address.port);\n      } else {\n        reject(new Error(\"Failed to get server address\"));\n      }\n    });\n    server.on(\"error\", (error) => {\n      reject(error);\n    });\n  });\n}\n", "import net from 'node:net';\nimport os from 'node:os';\n\nclass Locked extends Error {\n\tconstructor(port) {\n\t\tsuper(`${port} is locked`);\n\t}\n}\n\nconst lockedPorts = {\n\told: new Set(),\n\tyoung: new Set(),\n};\n\n// On this interval, the old locked ports are discarded,\n// the young locked ports are moved to old locked ports,\n// and a new young set for locked ports are created.\nconst releaseOldLockedPortsIntervalMs = 1000 * 15;\n\nconst minPort = 1024;\nconst maxPort = 65_535;\n\n// Lazily create timeout on first use\nlet timeout;\n\nconst getLocalHosts = () => {\n\tconst interfaces = os.networkInterfaces();\n\n\t// Add undefined value for createServer function to use default host,\n\t// and default IPv4 host in case createServer defaults to IPv6.\n\tconst results = new Set([undefined, '0.0.0.0']);\n\n\tfor (const _interface of Object.values(interfaces)) {\n\t\tfor (const config of _interface) {\n\t\t\tresults.add(config.address);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nconst checkAvailablePort = options =>\n\tnew Promise((resolve, reject) => {\n\t\tconst server = net.createServer();\n\t\tserver.unref();\n\t\tserver.on('error', reject);\n\n\t\tserver.listen(options, () => {\n\t\t\tconst {port} = server.address();\n\t\t\tserver.close(() => {\n\t\t\t\tresolve(port);\n\t\t\t});\n\t\t});\n\t});\n\nconst getAvailablePort = async (options, hosts) => {\n\tif (options.host || options.port === 0) {\n\t\treturn checkAvailablePort(options);\n\t}\n\n\tfor (const host of hosts) {\n\t\ttry {\n\t\t\tawait checkAvailablePort({port: options.port, host}); // eslint-disable-line no-await-in-loop\n\t\t} catch (error) {\n\t\t\tif (!['EADDRNOTAVAIL', 'EINVAL'].includes(error.code)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn options.port;\n};\n\nconst portCheckSequence = function * (ports) {\n\tif (ports) {\n\t\tyield * ports;\n\t}\n\n\tyield 0; // Fall back to 0 if anything else failed\n};\n\nexport default async function getPorts(options) {\n\tlet ports;\n\tlet exclude = new Set();\n\n\tif (options) {\n\t\tif (options.port) {\n\t\t\tports = typeof options.port === 'number' ? [options.port] : options.port;\n\t\t}\n\n\t\tif (options.exclude) {\n\t\t\tconst excludeIterable = options.exclude;\n\n\t\t\tif (typeof excludeIterable[Symbol.iterator] !== 'function') {\n\t\t\t\tthrow new TypeError('The `exclude` option must be an iterable.');\n\t\t\t}\n\n\t\t\tfor (const element of excludeIterable) {\n\t\t\t\tif (typeof element !== 'number') {\n\t\t\t\t\tthrow new TypeError('Each item in the `exclude` option must be a number corresponding to the port you want excluded.');\n\t\t\t\t}\n\n\t\t\t\tif (!Number.isSafeInteger(element)) {\n\t\t\t\t\tthrow new TypeError(`Number ${element} in the exclude option is not a safe integer and can't be used`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\texclude = new Set(excludeIterable);\n\t\t}\n\t}\n\n\tif (timeout === undefined) {\n\t\ttimeout = setTimeout(() => {\n\t\t\ttimeout = undefined;\n\n\t\t\tlockedPorts.old = lockedPorts.young;\n\t\t\tlockedPorts.young = new Set();\n\t\t}, releaseOldLockedPortsIntervalMs);\n\n\t\t// Does not exist in some environments (Electron, Jest jsdom env, browser, etc).\n\t\tif (timeout.unref) {\n\t\t\ttimeout.unref();\n\t\t}\n\t}\n\n\tconst hosts = getLocalHosts();\n\n\tfor (const port of portCheckSequence(ports)) {\n\t\ttry {\n\t\t\tif (exclude.has(port)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet availablePort = await getAvailablePort({...options, port}, hosts); // eslint-disable-line no-await-in-loop\n\t\t\twhile (lockedPorts.old.has(availablePort) || lockedPorts.young.has(availablePort)) {\n\t\t\t\tif (port !== 0) {\n\t\t\t\t\tthrow new Locked(port);\n\t\t\t\t}\n\n\t\t\t\tavailablePort = await getAvailablePort({...options, port}, hosts); // eslint-disable-line no-await-in-loop\n\t\t\t}\n\n\t\t\tlockedPorts.young.add(availablePort);\n\n\t\t\treturn availablePort;\n\t\t} catch (error) {\n\t\t\tif (!['EADDRINUSE', 'EACCES'].includes(error.code) && !(error instanceof Locked)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow new Error('No available ports found');\n}\n\nexport function portNumbers(from, to) {\n\tif (!Number.isInteger(from) || !Number.isInteger(to)) {\n\t\tthrow new TypeError('`from` and `to` must be integer numbers');\n\t}\n\n\tif (from < minPort || from > maxPort) {\n\t\tthrow new RangeError(`'from' must be between ${minPort} and ${maxPort}`);\n\t}\n\n\tif (to < minPort || to > maxPort) {\n\t\tthrow new RangeError(`'to' must be between ${minPort} and ${maxPort}`);\n\t}\n\n\tif (from > to) {\n\t\tthrow new RangeError('`to` must be greater than or equal to `from`');\n\t}\n\n\tconst generator = function * (from, to) {\n\t\tfor (let port = from; port <= to; port++) {\n\t\t\tyield port;\n\t\t}\n\t};\n\n\treturn generator(from, to);\n}\n\nexport function clearLockedPorts() {\n\tlockedPorts.old.clear();\n\tlockedPorts.young.clear();\n}\n", "import fs from \"fs/promises\";\nimport path from \"path\";\nimport {\n  checkDirAndFileName,\n  decodeHttpApiPath,\n  encodeHttpApiPath,\n  METADATA_FILENAME,\n} from \"../common/filename.js\";\nimport { IMockForgeSDK } from \"../common/sdk.js\";\nimport { HttpMockResponse, MockAPI, MockAPIMetadata } from \"../common/types.js\";\n\nexport class MockForgeSDK implements IMockForgeSDK {\n  constructor(private baseDir: string) {}\n\n  async listMockAPIs(): Promise<MockAPI[]> {\n    const httpDir = path.join(this.baseDir, \"http\");\n    if (!(await this.exist(httpDir))) {\n      return [];\n    }\n    const files = await fs.readdir(httpDir);\n    const httpAPI = await Promise.all(\n      files.map(async (file): Promise<MockAPI | null> => {\n        try {\n          const metaDataPath = path.join(httpDir, file, METADATA_FILENAME);\n          const metaDateContent = await fs.readFile(metaDataPath, \"utf-8\");\n          const metaData: MockAPIMetadata = JSON.parse(metaDateContent);\n          const [method, pathname] = decodeHttpApiPath(file);\n          const mockResponseFiles = await fs.readdir(path.join(httpDir, file));\n          const mockResponses = await Promise.all(\n            mockResponseFiles.map(async (mockResponseFile) => {\n              const mockResponsePath = path.join(\n                httpDir,\n                file,\n                mockResponseFile\n              );\n              const mockResponseContent = await fs.readFile(\n                mockResponsePath,\n                \"utf-8\"\n              );\n              const mockData = JSON.parse(mockResponseContent);\n              if (mockData.schema !== \"http_response_v1\") {\n                return null;\n              }\n              mockData.name = mockResponseFile.replace(\".json\", \"\");\n              return mockData;\n            })\n          );\n          return {\n            method,\n            pathname,\n            type: \"http\",\n            name: metaData.name,\n            mockResponses: mockResponses.filter((o) => !!o),\n            description: metaData.description,\n          };\n        } catch (error) {\n          return null;\n        }\n      })\n    );\n    return httpAPI.filter((o) => !!o);\n  }\n\n  async addMockAPI(mockAPI: MockAPI): Promise<void> {\n    const metaDataPath = this.resolveAPIMetadata(mockAPI);\n    if (await this.exist(metaDataPath)) {\n      throw new Error(\"API already exists\");\n    }\n    for (const mockResponse of mockAPI.mockResponses) {\n      const mockResponsePath = this.resolveMockResponsePath(\n        mockAPI.method,\n        mockAPI.pathname,\n        mockResponse.name\n      );\n      if (await this.exist(mockResponsePath)) {\n        throw new Error(`Mock response ${mockResponse.name} already exists`);\n      }\n    }\n    await fs.mkdir(path.dirname(metaDataPath), { recursive: true });\n    await fs.writeFile(\n      metaDataPath,\n      JSON.stringify(\n        {\n          name: mockAPI.name,\n          description: mockAPI.description,\n        },\n        null,\n        2\n      )\n    );\n    for (const mockResponse of mockAPI.mockResponses) {\n      await this.addHttpMockResponse(\n        mockAPI.method,\n        mockAPI.pathname,\n        mockResponse\n      );\n    }\n  }\n\n  async updateHttpMockAPI(\n    method: string,\n    pathname: string,\n    data: MockAPIMetadata\n  ) {\n    const metaDataPath = path.join(\n      this.resolveHttpApiDir(method, pathname),\n      METADATA_FILENAME\n    );\n    const mockAPI = JSON.parse(await fs.readFile(metaDataPath, \"utf-8\"));\n    fs.writeFile(\n      metaDataPath,\n      JSON.stringify({ ...mockAPI, ...data }, null, 2)\n    );\n  }\n\n  async addHttpMockResponse(\n    method: string,\n    pathname: string,\n    mockResponse: HttpMockResponse\n  ) {\n    const mockResponsePath = this.resolveMockResponsePath(\n      method,\n      pathname,\n      mockResponse.name\n    );\n    if (await this.exist(mockResponsePath)) {\n      throw new Error(`Mock response ${mockResponse.name} already exists`);\n    }\n    await fs.writeFile(mockResponsePath, JSON.stringify(mockResponse, null, 2));\n  }\n\n  deleteHttpMockResponse(\n    method: string,\n    pathname: string,\n    mockResponseName: string\n  ): Promise<void> {\n    const mockResponsePath = this.resolveMockResponsePath(\n      method,\n      pathname,\n      mockResponseName\n    );\n    return fs.unlink(mockResponsePath);\n  }\n\n  async deleteHttpMockAPI(method: string, pathname: string): Promise<void> {\n    const metaDataPath = this.resolveHttpApiDir(method, pathname);\n    await fs.rm(metaDataPath, { recursive: true });\n  }\n\n  private resolveMockResponsePath(\n    method: string,\n    pathname: string,\n    mockResponseName: string\n  ) {\n    const apiDir = this.resolveHttpApiDir(method, pathname);\n    const mockJSONName = `${mockResponseName}.json`;\n    if (!checkDirAndFileName(mockJSONName)) {\n      throw new Error(`Invalid mockJSONName : ${mockJSONName}`);\n    }\n    return path.join(apiDir, mockJSONName);\n  }\n\n  private async exist(filePath: string): Promise<boolean> {\n    try {\n      await fs.access(filePath);\n      return true;\n    } catch (error) {\n      if (\n        error instanceof Error &&\n        \"code\" in error &&\n        (error as NodeJS.ErrnoException).code === \"ENOENT\"\n      ) {\n        return false;\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  private resolveAPIMetadata(mockAPI: MockAPI) {\n    switch (mockAPI.type) {\n      case \"http\": {\n        const apiDir = path.join(\n          this.resolveHttpApiDir(mockAPI.method, mockAPI.pathname),\n          METADATA_FILENAME\n        );\n        return apiDir;\n      }\n      default: {\n        throw new Error(\"Unsupported mock type\");\n      }\n    }\n  }\n\n  private resolveHttpApiDir(method: string, pathname: string) {\n    const dirname = encodeHttpApiPath(method, pathname);\n    if (!checkDirAndFileName(dirname)) {\n      throw new Error(\"Invalid path\");\n    }\n    return path.join(this.baseDir, \"http\", dirname);\n  }\n}\n", "/* eslint-disable no-control-regex */\n\nexport default function filenameReservedRegex() {\n\treturn /[<>:\"/\\\\|?*\\u0000-\\u001F]/g;\n}\n\nexport function windowsReservedNameRegex() {\n\treturn /^(con|prn|aux|nul|com\\d|lpt\\d)$/i;\n}\n", "import filenameReservedRegex, {windowsReservedNameRegex} from 'filename-reserved-regex';\n\nexport default function isValidFilename(string) {\n\tif (!string || string.length > 255) {\n\t\treturn false;\n\t}\n\n\tif (filenameReservedRegex().test(string) || windowsReservedNameRegex().test(string)) {\n\t\treturn false;\n\t}\n\n\tif (string === '.' || string === '..') {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n", "import isValidFilename from \"valid-filename\";\nimport { HttpMethod } from \"./types.js\";\n\nconst JoinChar = \"__\";\n\nexport const METADATA_FILENAME = \"__metadata__.json\";\n\nexport function encodeHttpApiPath(method: string, apiPath: string): string {\n  const normalizedPath = apiPath\n    .split(\"/\")\n    .filter((segment) => segment.length > 0)\n    .join(JoinChar);\n\n  return `${JoinChar}${method.toUpperCase()}${JoinChar}${normalizedPath}${JoinChar}`;\n}\n\nexport function decodeHttpApiPath(dirname: string): [HttpMethod, string] {\n  if (!dirname.startsWith(JoinChar) || !dirname.endsWith(JoinChar)) {\n    throw new Error(\"Invalid dirname format\");\n  }\n  const trimmedDirname = dirname.slice(JoinChar.length, -JoinChar.length);\n  const parts = trimmedDirname.split(JoinChar);\n  const method = parts.shift();\n  if (!method) {\n    throw new Error(\"Method is missing from dirname\");\n  }\n  const pathname = \"/\" + parts.join(\"/\");\n  return [method.toUpperCase() as HttpMethod, pathname];\n}\n\nexport function checkDirAndFileName(originalName: string) {\n  const trimName = originalName.trim();\n\n  // \u68C0\u67E5\u524D\u540E\u662F\u5426\u6709\u7A7A\u767D\u5B57\u7B26\n  if (trimName !== originalName) {\n    return false;\n  }\n\n  // \u68C0\u67E5\u6587\u4EF6\u540D\u662F\u5426\u4E3A\u7A7A\n  if (trimName.length === 0) {\n    return false;\n  }\n\n  // \u68C0\u67E5\u6587\u4EF6\u540D\u662F\u5426\u7B26\u5408\u5176\u4ED6\u6709\u6548\u6027\u89C4\u5219\n  return isValidFilename(trimName);\n}\n", "import { MockForgeSDK } from \"../../sdk/node/sdk.js\";\nimport {\n  IMockForgeState,\n  IMockForgeStateService,\n  InitialState,\n} from \"../common/service.js\";\n\nexport class MockForgeStateService\n  extends MockForgeSDK\n  implements IMockForgeStateService\n{\n  private state: IMockForgeState = {\n    http: [],\n  };\n\n  async getMockForgeState(): Promise<IMockForgeState> {\n    return this.state;\n  }\n\n  async toggleHttpApiResponse(\n    method: string,\n    pathname: string,\n    responseName: string\n  ): Promise<void> {\n    const previous = this.state.http.find(\n      (o) => o.method === method && o.pathname === pathname\n    );\n    if (!previous) {\n      this.state.http.push({\n        method,\n        pathname,\n        activeMockResponses: [responseName],\n      });\n    } else {\n      if (previous.activeMockResponses.includes(responseName)) {\n        previous.activeMockResponses = previous.activeMockResponses.filter(\n          (o) => o !== responseName\n        );\n      } else {\n        previous.activeMockResponses.push(responseName);\n      }\n    }\n  }\n\n  async getInitialState(): Promise<InitialState> {\n    const mockAPIs = await this.listMockAPIs();\n    const mockState = await this.getMockForgeState();\n    return {\n      mockAPIs,\n      mockState,\n    };\n  }\n}\n", "import decodeComponent from 'decode-uri-component';\nimport {includeKeys} from 'filter-obj';\nimport splitOnFirst from 'split-on-first';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replaceAll(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSeparator = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSeparator, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options, type) {\n\tif (type === 'string' && typeof value === 'string') {\n\t\treturn value;\n\t}\n\n\tif (typeof type === 'function' && typeof value === 'string') {\n\t\treturn type(value);\n\t}\n\n\tif (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\treturn value.toLowerCase() === 'true';\n\t}\n\n\tif (type === 'number' && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\treturn Number(value);\n\t}\n\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\treturn Number(value);\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\ttypes: Object.create(null),\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replaceAll('+', ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null && options.types[key] !== 'string') {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tconst type = options.types[key] ? options.types[key].replace('[]', '') : undefined;\n\t\t\t\tvalue[key2] = parseValue(value2, options, type);\n\t\t\t}\n\t\t} else if (typeof value === 'object' && value !== null && options.types[key] === 'string') {\n\t\t\treturnValue[key] = Object.values(value).join(options.arrayFormatSeparator);\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options, options.types[key]);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tresult[key] = Boolean(value) && typeof value === 'object' && !Array.isArray(value) ? keysSorter(value) : value;\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tqueryString &&= `?${queryString}`;\n\n\tlet hash = getHash(object.url);\n\tif (typeof object.fragmentIdentifier === 'string') {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n", "const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n", "export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n", "export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n", "import * as queryString from './base.js';\n\nexport default queryString;\n"],
  "mappings": "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",
  "names": ["exports", "module", "exports", "module", "parse", "exports", "module", "cors", "import_path", "os", "net", "exclude", "path", "fs", "decode", "express", "cors"]
}
